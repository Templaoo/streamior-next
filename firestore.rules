rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Users collection - Users can read and write their own data
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
      
      // Allow user creation during sign-up
      allow create: if request.auth != null && request.auth.uid == userId;
      
      // User subcollections (destinations, settings, etc.)
      match /{subcollection=**} {
        allow read, write: if request.auth != null && request.auth.uid == userId;
      }
    }
    
    // Example: Public read-only collections
    match /public/{document=**} {
      allow read: if true;
      allow write: if false; // Only admins can write (set up admin rules separately)
    }
    
    // Example: Admin-only collections
    match /admin/{document=**} {
      allow read, write: if request.auth != null && 
        exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    // Default: Deny all other access
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
